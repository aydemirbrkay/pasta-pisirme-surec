<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hJQAQwAgAIuAAuQCP//Z
</value>
  </data>
</root>